#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.

# country
on_startup = {
	if = {
		limit = {
			has_government_attribute = enables_yama_authority
		}
		save_global_event_target_as = YamaOfGensokyo
		th_yama_approving_gensokyan_counter = yes
	}
	if = {
		limit = {
			has_government_attribute = th_increased_power_from_own_deity
		}
		th_ds_set_deity_buff_up = yes
	}
	if = {
		limit = {
			tag = KMJ
		}
		capital_scope = {
			save_global_event_target_as = kmj_capital
		}
	}
	else = {
		if = {
			limit = {
				not = { exists = KMJ }
				owns = 5281
			}
			5281 = {
				save_global_event_target_as = kmj_capital
			}
		}
	}
	if = {
		limit = { ai = no NOT = { has_country_flag = th_had_newspaper_event } capital_scope = { continent = gensokyo_continent } }
		country_event = { id = touhou_news.1 }
	}
	if = {
		limit = {
			has_government_attribute = uses_purified_land
		}
		every_owned_province = {
			if = {
				limit = { has_province_modifier = th_pure_land }
				remove_province_modifier = th_pure_land
			}
			if = {
				limit = { has_province_modifier = th_impure_land }
				remove_province_modifier = th_impure_land
			}
			if = {
				limit = { 
					th_province_is_or_accepts_culture = yes
				 }
				add_province_modifier = {
					name = th_pure_land
					duration = -1
				}
			}
			else_if = {
				limit = {
					th_province_is_or_accepts_culture = no
				}
				add_province_modifier = {
					name = th_impure_land
					duration = -1
				}
			}
		}
	}
}

# country
on_religion_change = {
	th_on_religion_change_effect = yes
}

# country.
on_secondary_religion_change = {
	th_on_secondary_religion_change_effect = yes
}

# country
# root = winning country, from = loser country
on_war_won = {
	th_yama_on_war_won_effect = yes
}

# country
# root = winning country, from = loser country
on_main_war_won = {
	if = {
		limit = {
			has_country_flag = th_lended_weapons_and_war
		}
		clr_country_flag = th_lended_weapons_and_war
		every_known_country = {
			limit = {
				has_country_flag = th_lcu_replace_them_with_lunarians
			}
			if = {
				limit = {
					ROOT = { has_country_flag = th_lended_lunarian_weapons_from_@PREV }
				}
				ROOT = { clr_country_flag = th_lended_lunarian_weapons_from_@PREV }
				country_event = {
					id = th_diplo_events.56
				}
			}
		}
	}
	if = {
		limit = {
			ROOT = {
				has_government_mechanic = th_junko_grudge_mechanic
				is_rival = FROM
			}
		}
		add_government_power = {
			mechanic_type = th_junko_grudge_mechanic
			power_type = th_junko_grudge
			value = -20
		}		
	}
	country_event = {
		id = TH_lunarian_events.11
	}
	th_tenshi_temper_gain_effect = { value = 6 }
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	if = {
		limit = {
			ROOT = {
				has_government_mechanic = th_junko_grudge_mechanic
				is_rival = FROM
			}
		}
		add_government_power = {
			mechanic_type = th_junko_grudge_mechanic
			power_type = th_junko_grudge
			value = -20
		}		
	}
}
# country
# root = winning country, from = loser country
on_separate_war_won = {
}

# country
# root = loser country, from = winner country
on_war_lost = {
}
on_main_war_lost = {
	if = {
		limit = {
			ROOT = {
				has_government_mechanic = th_junko_grudge_mechanic
				NOT = {
					is_rival = FROM
				}
			}
		}
		add_government_power = {
			mechanic_type = th_junko_grudge_mechanic
			power_type = th_junko_grudge
			value = 15
		}		
	}
	if = {
		limit = {
			ROOT = {
				has_government_mechanic = th_junko_grudge_mechanic
				is_rival = FROM
			}
		}
		add_government_power = {
			mechanic_type = th_junko_grudge_mechanic
			power_type = th_junko_grudge
			value = 30
		}		
	}
	country_event = {
		id = TH_lunarian_events.11
	}
	th_tenshi_temper_gain_effect = { value = -6 }
}
on_separate_war_lost = {
}


# country
# root = winning country, from = loser country
on_battle_won_country = {
	th_on_battle_won_country_effect = yes
	th_count_won_battles_and_reward_at_end = {
		counting_flag = scr_battle_counter_ready
		variable = scr_battle_counter
		max_value = 30
		country_event = flavor_scr.24	#SCR gets their government reform
	}
	th_count_won_battles_and_reward_at_end = {
		counting_flag = crd_is_counting_battles
		variable = crd_oni_battle_counter
		max_value = 10
		country_event = th_empty_event.1	#No event for CRD
	}
	th_count_won_battles_and_reward_at_end = {
		counting_flag = lcu_counts_battles
		variable = lcu_battle_counter
		max_value = 15
		country_event = th_empty_event.1	#No event for LCU
	}
	#if = {
	#	limit = {
	#		has_country_modifier = oni_german_beer
	#	}
	#	th_add_battle_passion = {
	#		value = 15
	#	}
	#}
	#else = {
	#	th_add_battle_passion = {
	#		value = 10
	#	}
	#}
	if = {
		limit = { has_government_attribute = th_gets_manpower_from_battles_and_sieges }
		add_manpower = 1
		add_yearly_manpower = 0.05
	}
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	th_on_battle_lost_country_effect = yes
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	if = {
		limit = {
			unit_owner = {
				th_is_or_was_tag = {
					tag = FUJ
				}
			}
			is_ruler_commanding_unit = yes
			enemy_unit = {
				unit_owner = {
					th_is_or_was_tag = {
						tag = CIN
					}
					NOT = { has_country_flag = cin_has_won_battle_against_mokou }
				}
			}
		}
		random_country = {
			limit = {
				th_is_or_was_tag = {
					tag = CIN
				}
			}
			set_country_flag = cin_has_won_battle_against_mokou
		}
	}
	if = {
		limit = {
			unit_owner = {
				th_is_or_was_tag = {
					tag = OKR
				}
			}
			is_ruler_commanding_unit = yes
			enemy_unit = {
				unit_owner = {
					th_is_or_was_tag = {
						tag = NET
					}
					NOT = { has_country_flag = net_won_battle_against_meira_in_person }
				}
			}
		}
		random_country = {
			limit = {
				th_is_or_was_tag = {
					tag = NET
				}
			}
			set_country_flag = net_won_battle_against_meira_in_person
		}
	}
	if = {
		limit = {
			unit_owner = {
				th_is_or_was_tag = {
					tag = REB
				}
			}
			enemy_unit = {
				unit_owner = {
					th_is_or_was_tag = {
						tag = HVR
					}
				}
			}
		}
		random_country = {
			limit = {
				th_is_or_was_tag = {
					tag = HVR
				}
			}
			change_variable = {
				which = hvr_won_rebel_battles_counter
				value = 1
			}
		}
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	random_events = {
		10 = army_professionalism_events.1 #City Sacked
		10 = flavor_tfr.16 #TFR sacks fort
		100 = 0
	}
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
	if = {
		limit = {
			has_government_attribute = th_can_convert_general_to_ruler
			is_lesser_in_union = no
		}
		if = {
			limit = { is_female = yes } 
			convert_female_ruler_to_general = 50
		}
		else = { convert_ruler_to_general = 50 }
	}
	if = {
		limit = {
			has_government_attribute = th_has_questioned_legitimacy
			legitimacy = 50
		}
		add_legitimacy = -100
		add_legitimacy = 50
	}
	if = {
		limit = {
			has_government_attribute = th_legitimacy_through_battles
			NOT = { has_government_attribute = th_has_oni_succession }
			NOT = { is_monarch_leader = yes }
		}
		if = {
			limit = { is_female = yes } 
			convert_female_ruler_to_general = 50
		}
		else = { convert_ruler_to_general = 50 }
	}
	if = {
		limit = { has_government_attribute = th_has_kappa_elections }
		set_variable = {
			which = election_term
			value = 1
		}
	}
	events = {
		tribal_succession.1		# Harsh anti-tribals.
		9492 					# Remove some event modifiers
		flavor_boh.8			# Winter King in Prague
		flavor_kol.1			# Bavarian Archbishop
		war_of_the_roses.101	# WotR - House of Lancaster wins
		war_of_the_roses.102	# WotR - House of York wins
		war_of_the_roses.106	# WotR - Another dynasty has seized the throne
		flavor_tur.102			# Janissary Reward
		flavor_ori.7			# Hamvira Victorious
		flavor_kbo.1			# The two branches of the Sayfawa dynasty
		flavor_kbo.8			# Sayfawa pretenders
		flavor_zan.5			# Coup of Coup of Suleiman and Muhammad al-Mazlum.
		purple_phoenix.1		# BYZ pretenders
		flavor_pol.3480			# The Pacta Conventa
		protestantism_events.15	# Catholic Leaning Monarch
		tengri_events.17		# Keep the Khojas in Power?
		flavor_tus.15			# Savonarola Dies
		flavor_brapru.22		# Succession of Albrecht Achilles
		flavor_brapru.25		# Dispositio Achillea (can also trigger from flavor_brapru.22)
		flavor_nor.27			# Proclamation in Hamar
		china_events.43			# Picking new Capital for China
		celestial_empire_events.3 #Resistance to Sinicization
		flavor_boh.2			#Heretic Kings
		flavor_hun.17			#Maintaining the Black Army
		flavor_tim.1			#Death of Shah Rukh
		muslim_school_events.20 #No Religious School
		flavor_daimyo.4			#Shiba Yoshikado
		flavor_fra.9000			# Franï¿½ois Villon
		flavor_sca.2			# Education Focus of the new Ruler
		flavor_rus.128			# Peter the Great
		flavor_rus.131			# Streltsy Payment
		flavor_gbr.102			# Religious Stance of the King
		MEE_Byzantine_Events.42 # Demetrios claims the throne
		flavor_fuj.106			# Ruler becomes immediately a leveling general
		th_oni_succession.1		# Oni Succession mechanic
	}
}

# country
on_monarch_death = {
	events = {
		flavor_wal.1 # Vlad the Impaler. So that he doesn't try to usurp his father.
		flavor_nav.4 # Navarra succession event
		flavor_sax.8 # Treaty of Leipzig
		flavor_pap.16 # Borgia Pope
		flavor_pap.19 # death of borgia pope
		flavor_tus.22 # Medici Pope
		flavor_tus.24 # death of the Medici Pope
		majapahit.8 # Majapahit pretenders
		flavor_mal.11 # Mali pretenders
		flavor_mal.47 # Pilgrimage ends prematurely
		government_events.3	# Election of a new Ruler
		th_samurai_succession.1 # Special samurai succession
	}
}

# country
on_new_term_election = {
	events = {
		700		# Election event
		elections.720		# Dutch Republic
		elections.800	# Lottery election
		pirates.1
		fairy_elections.1
		flavor_kpp.1
		flavor_kpp.29
		flavor_tgu.15
	}
}

# country
on_death_election = {
	events = {
		701		# Election event
		elections.721		# Dutch Republic
		elections.800	# Lottery election
		flavor_tus.16 #Savonarola Leaves This World
		fairy_elections.2
		flavor_kpp.2
		flavor_kpp.30
		flavor_tgu.16
	}
}

# country
on_bankruptcy = {
	if = {
		limit = { has_government_attribute = th_negated_bankruptcy }
		add_stability = 3
		set_prestige_to_zero = yes
		add_legitimacy = 100
		add_country_modifier = {
			name = th_luxurious_wastes
			duration = 1825
		}
	}
}

# country
on_heir_death = {
	if = {
		limit = {
			has_government_mechanic = th_junko_grudge_mechanic
		}
		add_government_power = {
			mechanic_type = th_junko_grudge_mechanic
			power_type = th_junko_grudge
			value = 20
		}	
	}	
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		flavor_sca.2
		theocracy.1
		touhou_theocracy.1
	}
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	if = {
		limit = { th_is_touhou_culture_group = yes }
		add_government_reform = Gensokyan_celestial_empire
	}
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	remove_government_reform = Gensokyan_celestial_empire
}

# province
on_adm_development = {
	th_on_development_effect = {
		type = adm
	}
	th_tenshi_temper_gain_effect_from_provinces = { value = -3 }
	th_wandering_state_on_development = { base_type = base_tax }
}

# province
on_dip_development = {
	th_on_development_effect = {
		type = dip
	}
	th_tenshi_temper_gain_effect_from_provinces = { value = -3 }
	th_wandering_state_on_development = { base_type = base_production }
}

# province
on_mil_development = {
	th_on_development_effect = {
		type = mil
	}
	th_tenshi_temper_gain_effect_from_provinces = { value = -3 }
	th_wandering_state_on_development = { base_type = base_manpower }
}

on_overextension_pulse = {
	th_on_overextension_pulse_effect = yes
}

on_yearly_pulse_2 = {
	events = {
		flavor_hvr.25 #gain hisou sword power
	}
}

on_thri_yearly_pulse_4 = {
	events = {
		th_sixty_year_cycle_incident_events.2
	}
}

on_four_year_pulse_4 = {
	random_events = {
		100 = touhou_events.3
		# randomevents.txt
		100 = 3051
		100 = 5008
		100 = 5014
		100 = 5015
		100 = 5017
		100 = 5018
		100 = 5019
		100 = 5020
		100 = 5021
		100 = 5022
		100 = 5023
		100 = 5024
		100 = 5025
		100 = 5027
		100 = 5032
		100 = 5040
		100 = 5045
		100 = 5050
		100 = 5051
		100 = 5052
		100 = 5053
		10 = 5054
		100 = 5055
		100 = 5056
		100 = 5058
		100 = 5059
		100 = 5060
		100 = 5061
		100 = 5064
		100 = 5065
		100 = 5066
		100 = 5068
		100 = 5070
		100 = 5071
		100 = 5072
		100 = 5074
		100 = 5075
		100 = 5076
		100 = 5077
		100 = 5082
		100 = 5083
		100 = 5084
		100 = 5085
		100 = 5086
		100 = 5088
		100 = 5089
		100 = 5090
		100 = 5091
		100 = 5092
		100 = 5093
		100 = 5094
		100 = 5095
		10 = 5096
		100 = 5097
		100 = 5098
		100 = 5099
		100 = 6000
		100 = 6001
		100 = 6003
		100 = 6004
		100 = 6005
		100 = 6006
		100 = 6012
		100 = 6013
		100 = 6015
		100 = 710
		100 = 711
		100 = 712
		100 = 713
		100 = 714
		100 = 715
		100 = 716
		100 = 717
		100 = 718
		100 = 719
		100 = 720
		100 = 722
		100 = 723
		100 = 724
		100 = 725
		100 = 726
		100 = 727
		100 = 728
		100 = 729
		#100 = random_event.1
		300 = random_event.2
		100 = random_event.3
		100 = random_event.4
		100 = random_event.5
		100 = random_event.6
		100 = random_event.7
		100 = random_event.8
		150 = random_event.9
		100 = random_event.10
		100 = random_event.11
		100 = random_event.12
		100 = random_event.13
		100 = random_event.14
		100 = random_event.15
		100 = random_event.16

		100 = random_event.26
		1 = random_event.27
	}
}

# Estates pulse
on_five_year_pulse_2 = {
	random_events = {
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.6
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		100 = burghers_estate_events.9
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		400 = nobles_estate_events.9 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Clergy
		100 = church_estate_events.1
			#Regional Variations:
			100 = church_estate_events.101
			100 = church_estate_events.102
			100 = church_estate_events.103
			100 = church_estate_events.104
			100 = church_estate_events.105
		100 = church_estate_events.2
		100 = church_estate_events.3
		100 = church_estate_events.4
		400 = church_estate_events.5 #Disloyal
		400 = church_estate_events.6 #Demands
		100 = church_estate_events.7 #Bonus
		100 = church_estate_events.8
		100 = church_estate_events.9
		100 = church_estate_events.10
		# Dhimmi
		100 = dhimmi_estate_events.1
		400 = dhimmi_estate_events.2 #Demands
		100 = dhimmi_estate_events.3
		100 = dhimmi_estate_events.4
		100 = dhimmi_estate_events.5
		100 = dhimmi_estate_events.6
		400 = dhimmi_estate_events.7 #Disloyal
		100 = dhimmi_estate_events.8
		# Cossacks
		100 = cossack_estate_events.1
		#100 = cossack_estate_events.2 (triggers in neighbor country)
		100 = cossack_estate_events.6
		100 = cossack_estate_events.7
		100 = cossack_estate_events.8
		100 = cossack_estate_events.9
		100 = cossack_estate_events.10
		100 = cossack_estate_events.11
		400 = cossack_estate_events.12 #Disloyal
		100 = cossack_estate_events.13
		400 = cossack_estate_events.14 #Demands
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands
		# Marathas
		100 = marathas_estate_events.2
		100 = marathas_estate_events.3
		100 = marathas_estate_events.4
		100 = marathas_estate_events.5
		100 = marathas_estate_events.6
		400 = marathas_estate_events.7 # Demands
		100 = marathas_estate_events.8
		100 = marathas_estate_events.9
		100 = marathas_estate_events.10
		400 = marathas_estate_events.11 # Disloyal
		# Brahmins
		400 = brahmins_estate_events.2 # demands
		100 = brahmins_estate_events.3
		100 = brahmins_estate_events.4
		100 = brahmins_estate_events.5
		400 = brahmins_estate_events.6 # disloyal
		100 = brahmins_estate_events.7
		100 = brahmins_estate_events.8
		100 = brahmins_estate_events.9
		100 = brahmins_estate_events.10
		100 = brahmins_estate_events.11
		# Jains
		100 = jains_estate_events.2
		100 = jains_estate_events.3
		100 = jains_estate_events.4
		100 = jains_estate_events.5
		100 = jains_estate_events.6
		100 = jains_estate_events.7
		400 = jains_estate_events.8 # Disloyal
		100 = jains_estate_events.9
		400 = jains_estate_events.10 # Demands
		100 = jains_estate_events.11
		# Vaishyas
		100 = vaisyas_estate_events.2
		100 = vaisyas_estate_events.3
		100 = vaisyas_estate_events.4
		100 = vaisyas_estate_events.5
		100 = vaisyas_estate_events.6
		100 = vaisyas_estate_events.7
		100 = vaisyas_estate_events.8
		400 = vaisyas_estate_events.9
		100 = vaisyas_estate_events.10
		100 = vaisyas_estate_events.11
		# Rajputs
		100 = rajputs_estate_events.2
		100 = rajputs_estate_events.3
		100 = rajputs_estate_events.4
		100 = rajputs_estate_events.5
		400 = rajputs_estate_events.6
		100 = rajputs_estate_events.7
		400 = rajputs_estate_events.8
		100 = rajputs_estate_events.9
		100 = rajputs_estate_events.10
		100 = rajputs_estate_events.11
		# Janissaries
		100 = janissaries_estate_events.1
		100 = janissaries_estate_events.2
		100 = janissaries_estate_events.3
		100 = janissaries_estate_events.4
		100 = janissaries_estate_events.5
		100 = janissaries_estate_events.6
		100 = janissaries_estate_events.7
		400 = janissaries_estate_events.8 # Disloyal
		400 = janissaries_estate_events.9 # Demands
		100 = janissaries_estate_events.10
		100 = janissaries_estate_events.11
		100 = janissaries_estate_events.12
		100 = janissaries_estate_events.13
		# Lunarian Rabbits
		100 = th_estate_lunarian_rabbits_events.1
		100 = th_estate_lunarian_rabbits_events.2
		100 = th_estate_lunarian_rabbits_events.3
		100 = th_estate_lunarian_rabbits_events.4
		100 = th_estate_lunarian_rabbits_events.5
		100 = th_estate_lunarian_rabbits_events.6
		100 = th_estate_lunarian_rabbits_events.7
		100 = th_estate_lunarian_rabbits_events.8
		# Great Tengu
		100 = th_estate_great_tengu_events.1
		100 = th_estate_great_tengu_events.2
		100 = th_estate_great_tengu_events.3
		100 = th_estate_great_tengu_events.4
		400 = th_estate_great_tengu_events.5
		100 = th_estate_great_tengu_events.6
		100 = th_estate_great_tengu_events.7
		400 = th_estate_great_tengu_events.8
		400 = th_estate_great_tengu_events.9
		50  = th_estate_great_tengu_events.10
		100 = th_estate_great_tengu_events.11
		# Crow Tengu
		100 = th_estate_crow_tengu_events.1
		100 = th_estate_crow_tengu_events.2
		100 = th_estate_crow_tengu_events.3
		100 = th_estate_crow_tengu_events.4
		100 = th_estate_crow_tengu_events.5
		100 = th_estate_crow_tengu_events.6
		100 = th_estate_crow_tengu_events.7
		100 = th_estate_crow_tengu_events.8
		100 = th_estate_crow_tengu_events.9
		100 = th_estate_crow_tengu_events.10
		100 = th_estate_crow_tengu_events.11
		# Wolf Tengu
		100 = th_estate_wolf_tengu_events.1
		100 = th_estate_wolf_tengu_events.2
		100 = th_estate_wolf_tengu_events.3
		100 = th_estate_wolf_tengu_events.4
		100 = th_estate_wolf_tengu_events.5
		100 = th_estate_wolf_tengu_events.6
		100 = th_estate_wolf_tengu_events.7
		100 = th_estate_wolf_tengu_events.8
		100 = th_estate_wolf_tengu_events.9
		100 = th_estate_wolf_tengu_events.10
		# Random
		5 = flavor_fra.9500
		1000 = 0
	}
}

on_five_year_pulse_3 = {
	events = {
		th_diplo_events.17
	}
}

on_five_year_pulse_4 = {
	random_events = {
		200 = 0
		100 = kalmar_union_events.7
		100 = kalmar_union_events.8
		100 = kalmar_union_events.9
		# Kappa events
		100 = flavor_kpp.15
		100 = flavor_kpp.16
		100 = flavor_kpp.17
		100 = flavor_kpp.18
	}
}

# province
on_province_religion_converted = {
	th_on_province_religion_changed_effect = yes
	th_on_province_religion_converted_effect = yes
	if = {
		limit = {
			religion = th_moriyashinto
		}
		mry_add_scaled_province_conversion_faith_power = {
			value = 1
			development_factor = 0.25
		}
	}
}

on_province_religion_changed = {
	th_on_province_religion_changed_effect = yes
}

# province, manually conversion
on_province_culture_converted = {
	th_on_province_culture_change_effect = yes
}

# province
# FROM = old owner
on_province_owner_change = {
	th_on_province_owner_change_effect = yes
	th_on_province_owner_change_estate_privileges_effect = yes
	mki_apply_all_tolerance_on_province_effect = yes
	mki_apply_all_religion_on_province_effect = yes
}

# country
on_harmonized_Touhou = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.1
	}
}
on_harmonized_th_hakureishinto = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.2
	}
}
on_harmonized_th_moriyashinto = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.3
	}
}
on_harmonized_th_taoist = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.4
	}
}
on_harmonized_eastern = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.5
	}
}
on_harmonized_th_oldhakurei = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.6
	}
}
on_harmonized_th_shinkism = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.7
	}
}
on_harmonized_th_scientistic = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.8
	}
}
on_harmonized_th_lunarian_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.9
	}
}
on_harmonized_lunarian_religion_g = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		th_confucian_events.10
	}
}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited = {
	th_on_mercenary_recruited_effect = yes
}

# THIS = One province in the state
on_add_pasha = {
	if = {
		limit = {
			owner = {
				has_government_attribute = pashas_purify_land
			}
		}
		hidden_effect = {
			owner = {
				save_event_target_as = province_owner
			}
		}
		area = {
			limit = { owned_by = event_target:province_owner }
			add_province_modifier = { name = th_purifying_pasha duration = -1 }
		}
	}
}

# THIS = One province in the state
on_remove_pasha = {
	hidden_effect = {
		owner = {
			save_event_target_as = province_owner
		}
	}

	area = {
		limit = { owned_by = event_target:province_owner }
		remove_province_modifier = th_purifying_pasha
	}
}

on_culture_promoted = {
	if = {
		limit = {
			has_government_attribute = uses_purified_land
		}
		every_owned_province = {
			if = {
				limit = { has_province_modifier = th_pure_land }
				remove_province_modifier = th_pure_land
			}
			if = {
				limit = { has_province_modifier = th_impure_land }
				remove_province_modifier = th_impure_land
			}
			if = {
				limit = { 
					th_province_is_or_accepts_culture = yes
				}
				add_province_modifier = {
					name = th_pure_land
					duration = -1
				}
			}
			else_if = {
				limit = {
					th_province_is_or_accepts_culture = no
				}
				add_province_modifier = {
					name = th_impure_land
					duration = -1
				}
			}
		}
	}
}

on_culture_demoted = {
	th_on_culture_demoted_effect = yes
	if = {
		limit = {
			has_government_attribute = uses_purified_land
		}
		every_owned_province = {
			if = {
				limit = { has_province_modifier = th_pure_land }
				remove_province_modifier = th_pure_land
			}
			if = {
				limit = { has_province_modifier = th_impure_land }
				remove_province_modifier = th_impure_land
			}
			if = {
				limit = {
					th_province_is_or_accepts_culture = yes
				}
				add_province_modifier = {
					name = th_pure_land
					duration = -1
				}
			}
			else_if = {
				limit = {
					th_province_is_or_accepts_culture = no
				}
				add_province_modifier = {
					name = th_impure_land
					duration = -1
				}
			}
		}
	}
}

on_primary_culture_changed = {
	if = {
		limit = {
			has_government_attribute = uses_purified_land
		}
		every_owned_province = {
			if = {
				limit = { has_province_modifier = th_pure_land }
				remove_province_modifier = th_pure_land
			}
			if = {
				limit = { has_province_modifier = th_impure_land }
				remove_province_modifier = th_impure_land
			}
			if = {
				limit = { 
					th_province_is_or_accepts_culture = yes
				}
				add_province_modifier = {
					name = th_pure_land
					duration = -1
				}
			}
			else_if = {
				limit = {
					th_province_is_or_accepts_culture = no
				}
				add_province_modifier = {
					name = th_impure_land
					duration = -1
				}
			}
		}
	}
}
# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	th_on_dependency_gained_effect = yes
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	if = {
		limit = {
			FROM = { has_country_flag = th_has_been_special_subject }
		}
		FROM = { clr_country_flag = th_has_been_special_subject }
	}
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	on_religion_change_estate_privileges_effect = yes
	if = {
		limit = {
			FROM = {
				OR = {
					has_reform = Gensokyan_fairy_government
					has_reform = Gensokyan_clownpiece_tribal_government
				}
				is_revolutionary = no
			}
			NOT = { tag = PAP }
			NOT = { culture = Fairy }
			th_ds_is_not_divine_state_nation = yes
		}
		change_government = monarchy
	}
	if = {
		limit = {
			FROM = {
				OR = {
					has_reform = Gensokyan_fairy_government
					has_reform = Gensokyan_clownpiece_tribal_government
				}
				is_revolutionary = no
			}
			NOT = { tag = PAP }
			culture = Fairy
			th_ds_is_not_divine_state_nation = yes
		}
		change_government = tribal
		add_government_reform = Gensokyan_fairy_government
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			th_ds_is_divine_state_nation = yes
		}
		change_government = monarchy
		add_government_reform = Gensokyan_divine_state
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			tag = HIG
		}
		change_government = monarchy
		add_government_reform = Gensokyan_hig_yama_government
		adopt_reform_progress = FROM
		save_global_event_target_as = YamaOfGensokyo
	}
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {
		limit = {
			has_estate = estate_fairy_pirates
		}
		add_estate_loyalty = {
			estate = estate_fairy_pirates
			loyalty = 5
		}
		th_pirate_add_raid_fame = yes
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	if = {
		limit = {
			FROM = {
				OR = {
					has_reform = Gensokyan_fairy_government
					has_reform = Gensokyan_clownpiece_tribal_government
				}
			}
			NOT = { tag = PAP }
			NOT = { culture = Fairy }
			th_ds_is_not_divine_state_nation = yes
		}
		change_government = monarchy
	}
	if = {
		limit = {
			FROM = {
				OR = {
					has_reform = Gensokyan_fairy_government
					has_reform = Gensokyan_clownpiece_tribal_government
				}
			}
			NOT = { tag = PAP }
			culture = Fairy
			th_ds_is_not_divine_state_nation = yes
		}
		change_government = tribal
		add_government_reform = Gensokyan_fairy_government
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			th_ds_is_divine_state_nation = yes
		}
		change_government = monarchy
		add_government_reform = Gensokyan_divine_state
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			tag = HIG
		}
		change_government = monarchy
		add_government_reform = Gensokyan_hig_yama_government
		adopt_reform_progress = FROM
		if = {
			limit = {
				NOT = { has_saved_event_target = YamaOfGensokyo }
			}
			save_global_event_target_as = YamaOfGensokyo
		}
	}
}

# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	th_wandering_state_on_conquest_effect = yes
	if = {
		limit = {
			owner = {
				has_estate = estate_fairy_pirates
			}
			development = 10
			has_port = yes
		}
		owner = {
			th_pirate_add_conquer_fame = yes
		}
	}
}

on_country_creation = {
	if = {
		limit = {
			tag = HIG
			OR = {
				NOT = {
					has_reform = Gensokyan_hig_yama_government
				}
				NOT = {
					government = monarchy
				}
			}
		}
		change_government = monarchy
		add_government_reform = Gensokyan_hig_yama_government
		save_global_event_target_as = YamaOfGensokyo
	}
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
	ROOT = {
		if = {
			limit = {
				has_government_attribute = th_gets_extra_manpower_from_pillaging
			}
			add_manpower = 3
			add_yearly_manpower = 1
		}
	}
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source
on_colonist_boosting_colony = {
	hidden_effect = {
		if = {
			limit = {
				owner = {
					has_government_attribute = uses_purified_land
				}
			}
			if = {
				limit = { has_province_modifier = th_pure_land }
				remove_province_modifier = th_pure_land
			}
			if = {
				limit = { has_province_modifier = th_impure_land }
				remove_province_modifier = th_impure_land
			}
			if = {
				limit = {
					th_province_is_or_accepts_culture = yes
				}
				add_province_modifier = {
					name = th_pure_land
					duration = -1
				}
			}
			else_if = {
				limit = {
					th_province_is_or_accepts_culture = no
				}
				add_province_modifier = {
					name = th_impure_land
					duration = -1
				}
			}
		}
	}
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
	th_on_force_conversion_effect = yes
}

on_institution_embracement = {
	if = {
		limit = { has_government_attribute = th_innovativeness_from_embracing_institutions }
		change_innovativeness = 10
	}
}
on_raze = {
	if = {
		limit = {
			owner = {
				has_mission = FOM_razing_and_looting_witch
				NOT = { mission_completed = FOM_razing_and_looting_witch }
			}
		}
		owner = {
			change_variable = {
				which = th_razed_provinces
				value = 1
			}
		}
	}
}

on_colony_finished = { #ROOT - Province
	th_tenshi_temper_gain_effect = { value = -3 }
}

on_advisor_hired = { #ROOT - Country
	th_tenshi_temper_gain_effect = { value = -2 }
}

on_adm_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
	th_on_specific_advisor_hired_effect = { type = adm }
}

on_dip_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
	th_on_specific_advisor_hired_effect = { type = dip }
}

on_mil_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
	th_on_specific_advisor_hired_effect = { type = mil }
}

on_tech_taken = { #ROOT - Country
}

on_barrage = { #ROOT - barraging country, FROM - barraged province 
	th_might_of_destruction_gain_effect = { value = 10 }
}

on_naval_barrage = { #ROOT - barraging country, FROM - barraged province 
	th_might_of_destruction_gain_effect = { value = 10 }
}

on_scorch_earth  = { #ROOT - scorching country, FROM - scorched province
	th_might_of_destruction_gain_effect = { value = 1 }
}

on_war_ended = { #ROOT - Winer FROM - Loser
}
on_battle_won_unit = {
	th_on_unit_battle_won_effect = yes
}

on_adm_exploited = {
	owner = {
		if = {
			limit = {
				has_government_mechanic = th_might_of_destruction_mechanic
			}
			add_government_power = {
				mechanic_type = th_might_of_destruction_mechanic
				power_type = th_might_of_destruction
				value = 5
			}
		}
		th_tenshi_temper_gain_effect = { value = 3 }
	}
}
on_dip_exploited = {
	owner = {
		if = {
			limit = {
				has_government_mechanic = th_might_of_destruction_mechanic
			}
			add_government_power = {
				mechanic_type = th_might_of_destruction_mechanic
				power_type = th_might_of_destruction
				value = 5
			}
		}
		th_tenshi_temper_gain_effect = { value = 3 }
	}
}
on_mil_exploited = {
	owner = {
		if = {
			limit = {
				has_government_mechanic = th_might_of_destruction_mechanic
			}
			add_government_power = {
				mechanic_type = th_might_of_destruction_mechanic
				power_type = th_might_of_destruction
				value = 5
			}
		}
		th_tenshi_temper_gain_effect = { value = 3 }
	}
}