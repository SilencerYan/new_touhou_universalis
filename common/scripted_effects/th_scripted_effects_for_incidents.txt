#This file contains all the effects, which are FINAL. You don't need to touch this file when you add a new incident
#Supports following incidents:
# scarlet_mists_incident			EoSD
# spring_snow_incident				PCB
# oni_night_parade_incident			IMP		(minor)
# eternal_night_incident			IN
# sixty_year_cycle_incident			PoFV
# mountain_of_faith_incident		MoF
# subterranean_animism_incident		SA
# undefined_fantastic_incident		UFO
# hisoutensoku_incident				His 	(minor)
# ten_desires_incident				TD
# hopeless_masquerade_incident		HM		(minor)
# reversal_incident					DDC
# urban_legend_incident				ULL		(minor)
# lunarian_incident					LoLK
# perfect_possession_incident		AoCF	(minor)
# four_seasons_incident				HSFS
# animal_realm_incident				WBWC
# unconnected_marketeers_incident	UM
#KEEP
th_incident_initialize_investigator = {
	set_country_flag = th_incident_investigating
	add_country_modifier = {
		name = th_incident_investigator_modifier
		duration = -1
		desc = th_incident_investigator_modifier_tt
	}
	#Now our investigator has his own scope! To call him type "event_target:th_incident_investigator"
	save_global_event_target_as = th_incident_investigator		
}

#Clear all the previous investigators - use this in the introduction event when nobody wants to investigate
th_incident_clr_previous_investigators = {
	every_known_country = {
		limit = {
			th_incident_is_investigator = yes
		}
		clr_country_flag = th_incident_investigating
		if = {
			limit = {
				has_country_modifier = th_incident_investigator_modifier
			}
			remove_country_modifier = th_incident_investigator_modifier
		}
		th_clear_investigation_partner = yes
	}
}

###HKR MISSION EFFECTS ### DO NOT TOUCH###
th_incident_initiate_good_outcome_counter = {
	set_country_flag = hkr_inci_setup
	set_variable = {
		which = th_incident_outcome_counter
		value = 0
	}
}
#########################################

#KEEP
th_incident_set_investigator = {
	th_incident_clr_previous_investigators = yes
	every_country = {
		limit = {
			has_country_flag = th_incident_investigating
		}
		th_incident_clr_previous_investigators = yes
	}
	if = {
		limit = {
			has_country_flag = th_eligible_investigator
			NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
			NOT = {
				any_country = {
					has_country_flag = th_eligible_investigator
				}
			}
		}
		ROOT = {
			th_incident_initialize_investigator = yes			
		}
	}
	else_if = {
		limit = {
			any_country = {
				th_is_major_main_character = yes
				has_country_flag = th_eligible_investigator
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
			}
		}
		random_country = {
			limit = {
				th_is_major_main_character = yes
				has_country_flag = th_eligible_investigator
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
			}
			th_incident_initialize_investigator = yes
		}
	}
	else_if = {
		limit = {
			any_country = {
				th_is_minor_main_character = yes
				has_country_flag = th_eligible_investigator
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
			}
		}
		random_country = {
			limit = {
				th_is_minor_main_character = yes
				has_country_flag = th_eligible_investigator
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
			}
			th_incident_initialize_investigator = yes
		}
	}
	else_if = {
		limit = {
			ai = no
			has_country_flag = th_eligible_investigator
			NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
		}
		ROOT = {
			th_incident_initialize_investigator = yes
		}
	}
	else_if = {
		limit = {
			any_country = {
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
				has_country_flag = th_eligible_investigator
				ai = no
			}
		}
		random_known_country = {
			limit = {
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
				has_country_flag = th_eligible_investigator
				ai = no
			}
			th_incident_initialize_investigator = yes
		}
	}
	else = {
		random_known_country = {
			limit = {
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
				has_country_flag = th_eligible_investigator
			}
			th_incident_initialize_investigator = yes
		}
	}

	if = {
		limit = {
			has_global_flag = th_incident_introduced
		}
		country_event = {
			id = th_incidents_event.12
			days = 1
		}
	}
}

#KEEP
th_incident_forbid_country_to_investigate = {
	every_country = {
		limit = {
			OR = { tag = $who$ was_tag = $who$ }
		}
		clr_country_flag = th_eligible_investigator
		set_country_flag = th_is_not_valid_for_investiagtor_role
	}
}

#KEEP
th_incident_setup_investigator = {
	if = {	#Player always becomes investigator if the choice is biased
		limit = {
			has_global_flag = th_biased_incident_active
			NOT = { tag = HKR }
			NOT = { was_tag = HKR }
		}
		th_incident_initialize_investigator = yes
	}
	else_if = {	#HKR always becomes investigator
		limit = {
			OR = {
				tag = HKR
				was_tag = HKR
			}
		}
		th_incident_initialize_investigator = yes
	}
	else_if = {	#FOM becomes investigator, whe HKR doesn't exist. Else HKR investigates
		limit = {
			OR = {
				tag = FOM
				was_tag = FOM
			}
		}
		if = {
			limit = {
				exists = HKR
				HKR = {
					has_country_flag = th_eligible_investigator
				}
			}
			every_country = {
				limit = {
					has_country_flag = th_incident_investigating
				}
				th_incident_clr_previous_investigators = yes
			}
			HKR = {
				th_incident_initialize_investigator = yes
			}
		}
		else = {
			th_incident_initialize_investigator = yes
		}
	}
	else_if = {	#MRY becomes investigator, when HKR and FOM are not aviable
		limit = { 
			OR = {
				tag = MRY
				was_tag = MRY
			}
		}
		if = {
			limit = {
				exists = HKR
				HKR = {
					has_country_flag = th_eligible_investigator
				}
			}
			every_country = {
				limit = {
					has_country_flag = th_incident_investigating
				}
				th_incident_clr_previous_investigators = yes
			}
			HKR = {
				th_incident_initialize_investigator = yes
			}
		}
		else_if = {
			limit = { 
				exists = FOM
				FOM = {
					has_country_flag = th_eligible_investigator
				}
			}
			every_country = {
				limit = {
					has_country_flag = th_incident_investigating
				}
				th_incident_clr_previous_investigators = yes
			}
			FOM = {
				th_incident_initialize_investigator = yes
			}
		}
		else = {
			th_incident_initialize_investigator = yes
		}
	}
	else_if = {	#SCR and NET shares the same priority
		limit = { 
			OR = {
				tag = NET
				tag = SCR
				tag = SCD
				tag = NMG
				was_tag = NET
				was_tag = SCR
			}
		}
		if = {
			limit = {
				exists = HKR
				HKR = {
					has_country_flag = th_eligible_investigator
				}
			}
			every_country = {
				limit = {
					has_country_flag = th_incident_investigating
				}
				th_incident_clr_previous_investigators = yes
			}
			HKR = {
				th_incident_initialize_investigator = yes
			}
		}
		else_if = {
			limit = { 
				exists = FOM
				FOM = {
					has_country_flag = th_eligible_investigator
				}
			}
			every_country = {
				limit = {
					has_country_flag = th_incident_investigating
				}
				th_incident_clr_previous_investigators = yes
			}
			FOM = {
				th_incident_initialize_investigator = yes
			}
		}
		else_if = {
			limit = { 
				exists = MRY
				MRY = {
					has_country_flag = th_eligible_investigator
				}
			}
			every_country = {
				limit = {
					has_country_flag = th_incident_investigating
				}
				th_incident_clr_previous_investigators = yes
			}
			MRY = {
				th_incident_initialize_investigator = yes
			}
		}
	}
	else = {
		th_incident_set_investigator = yes
	}
}

#KEEP
th_incident_introduction_event = {
	if = {
		limit = {
			NOT = { has_global_flag = th_incident_introduced }	
		}
		every_country = {
			limit = {
				capital_scope = {
					superregion = gensokyo_superregion
				}				
			}
			country_event = {
				id = $id$
				days = 1
			}
		}
		hidden_effect = {					
			set_global_flag = th_incident_introduced
		}
	}
}

###CLEANUP###
th_incident_clear_all_limited_flags = {	
	set_global_flag = th_incident_cleaned_all_flags
	clr_global_flag = th_incident_introduced
	clr_global_flag = th_minor_player_asked
	th_incident_clr_previous_investigators = yes
	clr_country_flag = th_incident_last_fight_won
	clr_country_flag = th_incident_last_fight_lost
	clr_country_flag = th_incident_last_fight_terribly_lost
	clr_country_flag = th_eligible_investigator
	clr_country_flag = th_is_not_valid_for_investiagtor_role
	clr_country_flag = th_refused_investigator
	clr_country_flag = th_incident_random_player_investigator
	every_country = {
		limit = {
			OR = {
				has_country_flag = th_incident_investigating
				has_country_flag = th_incident_last_fight_won
				has_country_flag = th_incident_last_fight_lost
				has_country_flag = th_incident_last_fight_terribly_lost
				has_country_flag = th_eligible_investigator
				has_country_flag = th_is_not_valid_for_investiagtor_role
				has_country_flag = th_refused_investigator
				has_country_flag = th_incident_random_player_investigator
			}
		}
		th_incident_clr_previous_investigators = yes
		clr_country_flag = th_incident_last_fight_won
		clr_country_flag = th_incident_last_fight_lost
		clr_country_flag = th_incident_last_fight_terribly_lost
		clr_country_flag = th_eligible_investigator
		clr_country_flag = th_is_not_valid_for_investiagtor_role
		clr_country_flag = th_refused_investigator
		clr_country_flag = th_incident_random_player_investigator
	}
	every_province = {
		limit = {
			has_province_flag = th_first_clean_dummy
		}
		clr_province_flag = th_first_clean_dummy
	}
	every_province = {
		limit = {
			has_province_flag = th_second_clean_dummy
		}
		clr_province_flag = th_second_clean_dummy
	}
}

#Solve incident globally
th_resolve_incident = {
	custom_tooltip = th_solve_$incident$_tt
	hidden_effect = {
		set_global_flag = th_$incident$_solved
		clr_global_flag = th_active_incident
		clr_global_flag = th_incident_to_terminate
		clr_global_flag = th_current_incident_$incident$
		th_incident_clear_all_limited_flags = yes
		th_remove_incident_specific_modifiers = yes
		clr_global_flag = th_recently_solved_incident_flag
		set_global_flag = th_recently_solved_incident_flag
	}
}

#Used for lesser incidents, which are active alongside other incidents
th_resolve_lesser_incident = {
	custom_tooltip = th_solve_$incident$_tt
	hidden_effect = {
		set_global_flag = th_$incident$_solved
		clr_global_flag = th_current_incident_$incident$
		th_remove_lesser_incident_specific_modifiers = yes
		clr_global_flag = th_recently_solved_lesser_incident_flag
		set_global_flag = th_recently_solved_lesser_incident_flag
	}
}

#The country flag for the investigator for solving an incident
th_solve_incident = {
	custom_tooltip = th_solve_$incident$_tt
	hidden_effect = {
		set_country_flag = th_has_solved_$incident$
		if = {
			limit = { NOT = { has_country_flag = th_solved_incident } }
			set_country_flag = th_solved_incident
		}
		if = {
			limit = { has_country_flag = hkr_inci_setup }
			change_variable = {
				which = th_incident_outcome_counter
				value = 1
			}
		}
	}
}
th_solve_incident_extra = {
	custom_tooltip = th_solve_$incident$_extra_tt
	hidden_effect = {
		set_country_flag = th_has_solved_$incident$_extra
	}
}

#The great effect which sets up the general incident
#Use this effect after declaring the countries, which cannot investigate
th_start_incident_effect = {
	every_country = {
		limit = {
			capital_scope = {
				superregion = gensokyo_superregion
			}
			NOT = {	has_country_flag = th_is_not_valid_for_investiagtor_role }
			is_free_or_tributary_trigger = yes
		}
		set_country_flag = th_eligible_investigator
	}
	if = {		
		limit = {
			has_global_flag = th_biased_incident_active
		}
		if = {
			limit = {
				ai = no
				has_country_flag = th_eligible_investigator
				NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
			}
			set_country_flag = th_incident_random_player_investigator
		}
		else = {
			random_country = {
				limit = {
					ai = no
					has_country_flag = th_eligible_investigator
					NOT = { has_country_flag = th_is_not_valid_for_investiagtor_role }
				}
				set_country_flag = th_incident_random_player_investigator
			}
		}
	}
	set_global_flag = th_incident_to_terminate
	set_global_flag = th_active_incident
	clr_global_flag = th_incident_cleaned_all_flags
	set_global_flag = th_current_incident_$incident$
	1 = {
		set_variable = {
			which = th_incident_stage
			value = 0
		}
		set_variable = {
			which = th_incident_current_points
			value = 0
		}
	}
}
th_start_lesser_incident_effect = {
	set_global_flag = th_lesser_incident_to_terminate
	set_global_flag = th_active_lesser_incident
	set_global_flag = th_current_incident_$incident$
}

#Tooltip
th_start_incident_tooltip = {
	custom_tooltip = th_start_$incident$_tt
}

#Let the investigator progress to the next stage
th_prepare_for_next_stage = {
	1 = {
		change_variable = {
			which = th_incident_stage
			value = 1
		}
	}
	if = {
		limit = {			
			th_incident_is_investigator = yes
		}
		clr_country_flag = th_incident_stage_timer
		set_country_flag = th_incident_stage_timer
	}
}

#Set the stage of an incident
th_set_incident_stage = {
	1 = {
		set_variable = {
			which = th_incident_stage
			value = $stage$
		}
	}
}

#Set the stage of an incident
th_set_incident_points = {
	1 = {
		set_variable = {
			which = th_incident_current_points
			value = $points$
		}
	}
}

#Effect for the country, who investigates an incident first
th_investigate_incident = {
	custom_tooltip = th_investigate_$incident$_tt
	add_adm_power = -25
	hidden_effect = {
		1 = {
			set_variable = {
				which = th_incident_stage
				value = 1
			}
		}
		clr_country_flag = th_incident_stage_timer
		set_country_flag = th_incident_stage_timer
		if = {
			limit = {
				ai = no
				NOT = { has_country_flag = th_incident_had_info }
			}
			country_event = {
				id = th_danmaku_event.1
				days = 1
			}
		}
	}
}

#Effect for a country to be made into a new investigator if the previous investigator dies/refuses
th_incident_set_country_to_new_investigator = {
	custom_tooltip = th_incident_set_country_to_new_investigator.tt
	hidden_effect = {
		every_country = {
			limit = {
				has_country_flag = th_incident_investigating
			}
			clr_country_flag = th_incident_investigating
			if = {
				limit = {
					has_country_modifier = th_incident_investigator_modifier
				}
				remove_country_modifier = th_incident_investigator_modifier
			}
		}
		th_incident_initialize_investigator = yes
		if = {
			limit = {
				ai = no
				NOT = { has_country_flag = th_incident_had_info }
			}
			country_event = {
				id = th_danmaku_event.1
				days = 1
			}
		}
		clr_country_flag = th_incident_stage_timer
		set_country_flag = th_incident_stage_timer
	}
}

#Effect for the country, which refuses to investigate in the introduction event
th_refuse_investigating_incident = {
	add_prestige = -25
	hidden_effect = {
		clr_country_flag = th_incident_investigating
		if = {
			limit = {
				has_country_modifier = th_incident_investigator_modifier
			}
			remove_country_modifier = th_incident_investigator_modifier
		}
		random_country = {	
			limit = {
				th_incident_can_become_investigator = yes
			}	
			add_adm_power = -25
			th_incident_set_country_to_new_investigator = yes
		}
	}
}

#Change the investigation points
th_incident_change_points = {
	custom_tooltip = th_incident_change_points_$value$_tt
	hidden_effect = {
		1 = {
			change_variable = {
				which = th_incident_current_points
				value = $value$
			}
		}
	}
}

#Disable incidents as you have united all of Gensokyo on your own
th_disable_incidents = {
	if = {
		limit = {
			NOT = { has_global_flag = th_deactivated_incidents }
		}
		custom_tooltip = th_disable_incidents_tt
		hidden_effect = {
			set_global_flag = th_deactivated_incidents
		}
	}
}