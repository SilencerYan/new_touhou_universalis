#This file contains all the effects, which require updating whenever a new incident is created
#Supports following incidents:
# scarlet_mists_incident
# spring_snow_incident
# oni_night_parade_incident
# eternal_night_incident
# sixty_year_cycle_incident
# mountain_of_faith_incident
# subterranean_animism_incident
# undefined_fantastic_incident
# hisoutensoku_incident
# ten_desires_incident
# hopeless_masquerade_incident
# reversal_incident
# urban_legend_incident
# lunarian_incident
# perfect_possession_incident
# four_seasons_incident
# animal_realm_incident
# unconnected_marketeers_incident
th_enable_random_incident = {
	custom_tooltip = th_enable_random_incident_tt
	hidden_effect = {
		set_global_flag = th_random_incident_active
		1 = {
			set_variable = {
				which = th_incident_rng_counter
				value = 0
			}
		}
	}
}

th_select_random_incident_effect = {
	custom_tooltip = th_picked_rng_$incident$_tt
	set_global_flag = th_picked_rng_$incident$
}

th_select_random_incident = {
	1 = {
		change_variable = {
			which = th_incident_rng_counter
			value = 1
		}
	}
	random_list = {
		1 = {	#EoSD
			trigger = { NOT = { th_incident_has_been_resolved = { incident = scarlet_mists_incident } } }
			th_select_random_incident_effect = { incident = scarlet_mists_incident }
		}
		1 = {	#PCB
			trigger = { NOT = { th_incident_has_been_resolved = { incident = spring_snow_incident } } }
			th_select_random_incident_effect = { incident = spring_snow_incident }
		}
		#1 = {	#IMP (lesser)
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = oni_night_parade_incident } } }
		#	th_select_random_incident_effect = { incident = oni_night_parade_incident }
		#}
		1 = {	#IN
			trigger = { NOT = { th_incident_has_been_resolved = { incident = eternal_night_incident } } }
			th_select_random_incident_effect = { incident = eternal_night_incident }
		}
		#1 = {	#PoFV (lesser)
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = sixty_year_cycle } } }
		#	th_select_random_incident_effect = { incident = sixty_year_cycle_incident }
		#}
		1 = {	#MOF
			trigger = { NOT = { th_incident_has_been_resolved = { incident = mountain_of_faith_incident } } }
			th_select_random_incident_effect = { incident = mountain_of_faith_incident }
		}
		1 = {	#SA
			trigger = { NOT = { th_incident_has_been_resolved = { incident = subterranean_animism_incident } } }
			th_select_random_incident_effect = { incident = subterranean_animism_incident }
		}
		#1 = {	#UFO
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = undefined_fantastic_incident } } }
		#	th_select_random_incident_effect = { incident = undefined_fantastic_incident }
		#}
		#1 = {	#His (lesser)
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = hisoutensoku_incident } } }
		#	th_select_random_incident_effect = { incident = hisoutensoku_incident }
		#}
		#1 = {	#TD
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = ten_desires_incident } } }
		#	th_select_random_incident_effect = { incident = ten_desires_incident }
		#}
		#1 = {	#HM (lesser)
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = hopeless_masquerade_incident } } }
		#	th_select_random_incident_effect = { incident = hopeless_masquerade_incident }
		#}
		#1 = {	#DDC
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = reversal_incident } } }
		#	th_select_random_incident_effect = { incident = reversal_incident }
		#}
		#1 = {	#ULL (lesser)
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = urban_legend_incident } } }
		#	th_select_random_incident_effect = { incident = urban_legend_incident }
		#}
		#1 = {	#LoLK
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = lunarian_incident } } }
		#	th_select_random_incident_effect = { incident = lunarian_incident }
		#}
		#1 = {	#AoCF (lesser)
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = perfect_possession_incident } } }
		#	th_select_random_incident_effect = { incident = perfect_possession_incident }
		#}
		#1 = {	#HSFS
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = four_seasons_incident } } }
		#	th_select_random_incident_effect = { incident = four_seasons_incident }
		#}
		#1 = {	#WBWC
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = animal_realm_incident } } }
		#	th_select_random_incident_effect = { incident = animal_realm_incident }
		#}
		#1 = {	#UM
		#	trigger = { NOT = { th_incident_has_been_resolved = { incident = unconnected_marketeers_incident } } }
		#	th_select_random_incident_effect = { incident = unconnected_marketeers_incident }
		#}
	}
}

#If an incident is active for over 25 years, it gets forcefully terminated and a bad ending occurs
th_incident_terminate_current_incident = {
	hidden_effect = {
		clr_global_flag = th_incident_to_terminate
	}
	trigger_switch = {
		on_trigger = has_global_flag
		th_current_incident_scarlet_mists_incident			= { country_event = { id = th_scarlet_mists_incident_events.100 } }
		th_current_incident_spring_snow_incident			= { country_event = { id = th_spring_snow_incident_events.100 } }
		#th_current_incident_oni_night_parade_incident		= { country_event = { id = th_oni_night_parade_incident_events.100 } }
		th_current_incident_eternal_night_incident			= { country_event = { id = th_eternal_night_incident_events.100 } }
		th_current_incident_sixty_year_cycle_incident		= { country_event = { id = th_sixty_year_cycle_incident_events.100 } }
		th_current_incident_mountain_of_faith_incident		= { country_event = { id = th_mountain_of_faith_incident_events.100 } }
		th_current_incident_subterranean_animism_incident	= { country_event = { id = th_subterranean_animism_incident_events.100 } }
		#th_current_incident_undefined_fantastic_incident	= { country_event = { id = th_undefined_fantastic_incident_events.100 } }
		#th_current_incident_hisoutensoku_incident			= { country_event = { id = th_hisoutensoku_incident_events.100 } }
		#th_current_incident_ten_desires_incident			= { country_event = { id = th_ten_desires_incident_events.100 } }
		#th_current_incident_hopeless_masquerade_incident	= { country_event = { id = th_hopeless_masquerade_incident_events.100 } }
		#th_current_incident_reversal_incident				= { country_event = { id = th_reversal_incident_events.100 } }
		#th_current_incident_urban_legend_incident			= { country_event = { id = th_urban_legend_incident_events.100 } }
		#th_current_incident_lunarian_incident				= { country_event = { id = th_lunarian_incident_events.100 } }
		#th_current_incident_perfect_possession_incident		= { country_event = { id = th_perfect_possession_incident_events.100 } }
		#th_current_incident_four_seasons_incident			= { country_event = { id = th_four_seasons_incident_events.100 } }
		#th_current_incident_animal_realm_incident			= { country_event = { id = th_animal_realm_incident_events.100 } }
		#th_current_incident_unconnected_marketeers_incident	= { country_event = { id = th_unconnected_marketeers_incident_events.100 } }
	}
}

#Remove incident specific stuff
th_remove_incident_specific_modifiers = {
	#EoSD
	every_province = {
		limit = { has_province_modifier = th_plagued_by_the_scarlet_mist }
		remove_province_modifier = th_plagued_by_the_scarlet_mist
	}
	#PCB
	every_province = {
		limit = {
			OR = {
				has_province_modifier = th_PCB_hard_winter
				has_province_modifier = th_PCB_howling_winds
				has_province_modifier = th_PCB_frozen_land
				has_province_modifier = th_PCB_permanent_blizzard
				has_province_modifier = th_PCB_endless_winter
			}
		}
		remove_province_modifier = th_PCB_hard_winter
		remove_province_modifier = th_PCB_howling_winds
		remove_province_modifier = th_PCB_frozen_land
		remove_province_modifier = th_PCB_permanent_blizzard
		remove_province_modifier = th_PCB_endless_winter
		remove_province_modifier = th_PCB_locals_take_a_rest
		remove_province_modifier = th_PCB_locals_are_freezing
		remove_province_modifier = th_PCB_locals_are_used_to_freezing_to_death
		remove_province_modifier = th_PCB_abandon_province
		remove_province_modifier = th_PCB_great_fire
		remove_province_modifier = th_PCB_people_holding_together
	}
	#IMP
	#Already handled in th_remove_lesser_incident_specific_modifiers
	#IN	
	every_country = {
		limit = {
			OR = {
				has_country_flag = th_EN_had_recent_youkai_risen_up_flag
				has_country_flag = th_EN_has_rising_youkai_flag
				has_country_flag = th_EN_had_recent_youkai_unrest_flag
			}
		}
		clr_country_flag = th_EN_had_recent_youkai_risen_up_flag
		clr_country_flag = th_EN_has_rising_youkai_flag
		clr_country_flag = th_EN_had_recent_youkai_unrest_flag
	}
	if = {
		limit = { has_global_flag = th_EN_inci_lengthened_night }
		clr_global_flag = th_EN_inci_lengthened_night
	}
	every_province = {
		limit = {
			has_province_modifier = th_EN_unrested_youkais
		}
		remove_province_modifier = th_EN_unrested_youkais
	}
	every_country = {
		limit = {
			capital_scope = {
				th_gensokyo_or_moon_continent = yes
			}
		}
		disband_rebels = th_youkai_rebels
	}
	#PoFV
	#Already handled in th_remove_lesser_incident_specific_modifiers
	#MoF
	every_province = {
		limit = {
			OR = {
				has_province_flag = th_religious_zeal_event_happend
			}
		}
		clr_province_flag = th_religious_zeal_event_happend
	}
	#SA
	every_province = {
		limit = {
			OR = {
				has_province_modifier = th_SA_wandering_helpful_spirits
				has_province_modifier = th_SA_wandering_vengeful_spirits
			}
		}
		remove_province_modifier = th_SA_wandering_helpful_spirits
		remove_province_modifier = th_SA_wandering_vengeful_spirits
	}
	every_country = {
		limit = {
			th_has_any_investigation_partner = yes
		}
		th_clear_investigation_partner = yes
	}
	every_country = {
		limit = {
			capital_scope = {
				th_gensokyo_or_moon_continent = yes
			}
		}
		disband_rebels = th_earth_spirit_rebels
	}
	#UFO
	#His 
	#TD
	#HM	
	#DDC
	#ULL	
	#LoLK
	#AoCF
	#HSFS
	#WBWC
	#UM
}

th_remove_lesser_incident_specific_modifiers = {
	#IMP
	#PoFV
	clr_global_flag = th_POFV_random_matches_active
	every_country = {
		limit = {
			has_country_flag = th_POFV_joined_the_investigation
		}
		clr_country_flag = th_POFV_joined_the_investigation
		th_clear_all_selected_enemies = yes
		th_clear_all_enemy_related_flags = yes
	}
	gensokyo_continent = {
		limit = {
			has_province_modifier = th_POFV_random_flower_bed
		}
		remove_province_modifier = th_POFV_random_flower_bed
		remove_province_modifier = th_POFV_wonders_of_spring
		remove_province_modifier = th_POFV_passion_of_summer
		remove_province_modifier = th_POFV_change_of_fall
		remove_province_modifier = th_POFV_grace_of_winter
	}
}

###EFFECTS FOR SNOW SPRING INCIDENT###
th_PCB_incident_reduce_winter_modifier = {
	custom_tooltip = th_PCB_incident_reduce_winter_modifier.tt
	if = {
		limit = {
			has_province_modifier = th_PCB_endless_winter
		}
		hidden_effect = {
			remove_province_modifier = th_PCB_endless_winter
			add_permanent_province_modifier = {
				name = th_PCB_permanent_blizzard
				duration = -1
				desc = th_until_end_of_incident_desc
			}
		}
	}
	else_if = {
		limit = {
			has_province_modifier = th_PCB_permanent_blizzard
		}
		hidden_effect = {
			remove_province_modifier = th_PCB_permanent_blizzard		
			add_permanent_province_modifier = {
				name = th_PCB_frozen_land
				duration = -1
				desc = th_until_end_of_incident_desc
			}
		}
	}
	else_if = {
		limit = {
			has_province_modifier = th_PCB_frozen_land
		}
		hidden_effect = {
			remove_province_modifier = th_PCB_frozen_land
			add_permanent_province_modifier = {
				name = th_PCB_howling_winds
				duration = -1
				desc = th_until_end_of_incident_desc
			}			
		}
	}
	else = {
		hidden_effect = {
			remove_province_modifier = th_PCB_howling_winds
		}
	}
}

###EFFECTS FOR REFORM CENTERS###
th_create_random_center_of_reform = {	
	random_owned_province = {
		limit = {
			superregion = $superregion$
		}
		if = {
			limit = {
				NOT = { religion = $religion$ }
			}
			change_religion = $religion$
		}
		add_reform_center = $religion$
		add_permanent_province_modifier = {
			name = "religious_zeal_at_conv"
			duration = 9000
		}
		add_permanent_province_modifier = {
			name = "th_center_of_reformation"
			duration = -1
		}
	}
}

###EFFECTS FOR SIXTY YEAR CYCLE INCIDNET###
th_choose_new_danmaku_enemy = {
	set_country_flag = th_POFV_$who$_fight
	set_country_flag = th_POFV_had_$who$_fight
}

# Supports following enemies
# cirno
# mystia
# prismriver
# tewi
# reisen
# youmu
# sakuya
# medicine
# yuuka
# aya
# marisa
# reimu
# lily
# larva
# rumia
# wriggle
# nitori
# yumemi
# tenshi
# yuugi
# hina
# remilia
# yuyuko
# yukari
# okina
# kasen
# meira
# shinki
# mima
# satori
# mokou

th_clear_all_selected_enemies = {
	clr_country_flag = th_POFV_cirno_fight
	clr_country_flag = th_POFV_mystia_fight
	clr_country_flag = th_POFV_prismriver_fight
	clr_country_flag = th_POFV_tewi_fight
	clr_country_flag = th_POFV_reisen_fight
	clr_country_flag = th_POFV_youmu_fight
	clr_country_flag = th_POFV_sakuya_fight
	clr_country_flag = th_POFV_medicine_fight
	clr_country_flag = th_POFV_yuuka_fight
	clr_country_flag = th_POFV_aya_fight
	clr_country_flag = th_POFV_marisa_fight
	clr_country_flag = th_POFV_reimu_fight
	clr_country_flag = th_POFV_lily_fight
	clr_country_flag = th_POFV_larva_fight
	clr_country_flag = th_POFV_rumia_fight
	clr_country_flag = th_POFV_wriggle_fight
	clr_country_flag = th_POFV_nitori_fight
	clr_country_flag = th_POFV_yumemi_fight
	clr_country_flag = th_POFV_tenshi_fight
	clr_country_flag = th_POFV_yuugi_fight
	clr_country_flag = th_POFV_hina_fight
	clr_country_flag = th_POFV_remilia_fight
	clr_country_flag = th_POFV_yuyuko_fight
	clr_country_flag = th_POFV_yukari_fight
	clr_country_flag = th_POFV_okina_fight
	clr_country_flag = th_POFV_kasen_fight
	clr_country_flag = th_POFV_meira_fight
	clr_country_flag = th_POFV_shinki_fight
	clr_country_flag = th_POFV_mima_fight
	clr_country_flag = th_POFV_satori_fight
	clr_country_flag = th_POFV_mokou_fight
	clr_country_flag = th_POFV_kaguya_fight
}

th_clear_all_enemy_related_flags = {
	clr_country_flag = th_POFV_had_cirno_fight
	clr_country_flag = th_POFV_had_mystia_fight
	clr_country_flag = th_POFV_had_prismriver_fight
	clr_country_flag = th_POFV_had_tewi_fight
	clr_country_flag = th_POFV_had_reisen_fight
	clr_country_flag = th_POFV_had_youmu_fight
	clr_country_flag = th_POFV_had_sakuya_fight
	clr_country_flag = th_POFV_had_medicine_fight
	clr_country_flag = th_POFV_had_yuuka_fight
	clr_country_flag = th_POFV_had_aya_fight
	clr_country_flag = th_POFV_had_marisa_fight
	clr_country_flag = th_POFV_had_reimu_fight
	clr_country_flag = th_POFV_had_lily_fight
	clr_country_flag = th_POFV_had_larva_fight
	clr_country_flag = th_POFV_had_rumia_fight
	clr_country_flag = th_POFV_had_wriggle_fight
	clr_country_flag = th_POFV_had_nitori_fight
	clr_country_flag = th_POFV_had_yumemi_fight
	clr_country_flag = th_POFV_had_tenshi_fight
	clr_country_flag = th_POFV_had_yuugi_fight
	clr_country_flag = th_POFV_had_hina_fight
	clr_country_flag = th_POFV_had_remilia_fight
	clr_country_flag = th_POFV_had_yuyuko_fight
	clr_country_flag = th_POFV_had_yukari_fight
	clr_country_flag = th_POFV_had_okina_fight
	clr_country_flag = th_POFV_had_kasen_fight
	clr_country_flag = th_POFV_had_meira_fight
	clr_country_flag = th_POFV_had_shinki_fight
	clr_country_flag = th_POFV_had_mima_fight
	clr_country_flag = th_POFV_had_satori_fight
	clr_country_flag = th_POFV_had_mokou_fight
	clr_country_flag = th_POFV_had_kaguya_fight
}

###EFFECTS FOR SUBTERRANEAN ANIMISM INCIDNET###
# Supports following partners
###HKR###
# yukari
# suika
# aya
###FOM###
# alice
# patchouli
# nitori
###SCR###
# sakuya
###NET###
# youmu
###MHG###
# yuyuko
# reimu
###HIG###
# komachi
###EIT###
# eirin
# mokou
###FUJ###
# keine
# kaguya
###KPP###
# marisa
###fairy###
# daiyousei
#########
# generic
th_choose_investigation_partner = {
	custom_tooltip = th_choose_partner_$partner$_tt
	hidden_effect = {
		add_country_modifier = {
			name = th_sa_partner_$partner$
			duration = -1
			desc = lasts_until_investigation_lost
		}
	}
}

th_clear_investigation_partner = {
	custom_tooltip = th_clear_investigation_partner_tt
	hidden_effect = {
		remove_country_modifier = th_sa_partner_reimu
		remove_country_modifier = th_sa_partner_marisa
		remove_country_modifier = th_sa_partner_yukari
		remove_country_modifier = th_sa_partner_suika
		remove_country_modifier = th_sa_partner_aya
		remove_country_modifier = th_sa_partner_alice
		remove_country_modifier = th_sa_partner_patchouli
		remove_country_modifier = th_sa_partner_nitori
		remove_country_modifier = th_sa_partner_sakuya
		remove_country_modifier = th_sa_partner_youmu
		remove_country_modifier = th_sa_partner_yuyuko
		remove_country_modifier = th_sa_partner_komachi
		remove_country_modifier = th_sa_partner_eirin
		remove_country_modifier = th_sa_partner_mokou
		remove_country_modifier = th_sa_partner_keine
		remove_country_modifier = th_sa_partner_kaguya
		remove_country_modifier = th_sa_partner_daiyousei
		remove_country_modifier = th_sa_partner_generic
	}
}

###GENERAL EFFECTS###
th_incident_cruel_decision = {	
	if = {
		limit = {
			OR = {
				ruler_has_personality = malevolent_personality
				ruler_has_personality = cruel_personality
			}
		}
		add_mil_power = 150
	}
	else = {
		add_mil_power = -75
	}
	if = {
		limit = {
			ruler_has_personality = kind_hearted_personality
		}
		remove_ruler_personality = kind_hearted_personality
		add_ruler_personality = cruel_personality 
	}
}