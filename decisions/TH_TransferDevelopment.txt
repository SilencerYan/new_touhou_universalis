country_decisions = {	

	th_make_abstract_development_to_core = {
		color = { 63 72 204 }
		potential = {
			has_government_attribute = enables_development_transfer
			has_country_flag = th_dev_transfer_variables_set
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = th_make_abstract_development_to_core_tt
				check_variable = {
					which = th_newly_conquered_province_adm_cost
					value = 1
				}
			}
			variable_arithmetic_trigger = {
				custom_tooltip = th_has_enough_admin_to_core_tt
				export_to_variable = {
					which = th_our_current_adm_power
					value = trigger_value:adm_power
				}
				OR = {
					check_variable = {
						which = th_our_current_adm_power
						which = th_newly_conquered_province_adm_cost
					}
					check_variable = {
						which = th_our_current_adm_power
						value = 995
					}
				}
			}
		}	
		effect = {
			custom_tooltip = th_make_abstract_development_to_core_ct
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							which = th_newly_conquered_province_adm_cost
							value = 995
						}
					}
					set_variable = {
						which = th_coring_cycles
						value = 995
					}
				}
				else = {
					set_variable = {
						which = th_coring_cycles
						which = th_newly_conquered_province_adm_cost
					}
				}
				subtract_variable = {
					which = th_newly_conquered_province_adm_cost
					which = th_coring_cycles
				}
				while = {
					limit = {
						check_variable = {
							which = th_coring_cycles
							value = 5
						}
						check_variable = {
							which = th_newly_conquered_base_tax
							value = 1
						}
					}
					add_adm_power = -5
					# TEST #
					#random_province = {
					#	limit = {
					#		has_province_flag = kmj_capital_flag
					#	}
					#	th_add_base_development = {
					#		base_type = base_tax
					#		value = 1
					#	}
					#}
					event_target:kmj_capital = {
						th_add_base_development = {
							base_type = base_tax
							value = 1
						}
					}
					subtract_variable = {
						which = th_newly_conquered_base_tax
						value = 1
					}
					subtract_variable = {
						which = th_coring_cycles
						value = 5
					}
				}
				while = {
					limit = {
						check_variable = {
							which = th_coring_cycles
							value = 5
						}
						check_variable = {
							which = th_newly_conquered_base_production
							value = 1
						}
					}
					add_adm_power = -5
					# TEST #
					#random_province = {
					#	limit = {
					#		has_province_flag = kmj_capital_flag
					#	}
					#	th_add_base_development = {
					#		base_type = base_production
					#		value = 1
					#	}
					#}
					event_target:kmj_capital = {
						th_add_base_development = {
							base_type = base_production
							value = 1
						}
					}
					subtract_variable = {
						which = th_newly_conquered_base_production
						value = 1
					}
					subtract_variable = {
						which = th_coring_cycles
						value = 5
					}
				}
				while = {
					limit = {
						check_variable = {
							which = th_coring_cycles
							value = 5
						}
						check_variable = {
							which = th_newly_conquered_base_manpower
							value = 1
						}
					}
					add_adm_power = -5
					# TEST #
					#random_province = {
					#	limit = {
					#		has_province_flag = kmj_capital_flag
					#	}
					#	th_add_base_development = {
					#		base_type = base_manpower
					#		value = 1
					#	}
					#}
					event_target:kmj_capital = {
						th_add_base_development = {
							base_type = base_manpower
							value = 1
						}
					}
					subtract_variable = {
						which = th_newly_conquered_base_manpower
						value = 1
					}
					subtract_variable = {
						which = th_coring_cycles
						value = 5
					}
				}
			}
		}
		
		ai_will_do = {
			factor = 100
		}
	}
}
